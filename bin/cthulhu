#!/usr/bin/env ruby

require 'fileutils'
require 'securerandom'

command = ARGV[0]

gem_path = File.expand_path File.dirname(__FILE__)


def usage
  puts "Usage: cthulhu new app_name"
  puts "Usage: cthulhu handler handler_name"
  puts "Usage: cthulhu start"
end

def new_handler(gem_path)
  dir = "./handlers"
  if File.directory?(dir)
    handler_file_path = dir + "/" + ARGV[1].downcase + "_handler.rb"
    handler_klass = ARGV[1].capitalize + "Handler"
    File.open(handler_file_path, "w") do |file|
      file.puts "class #{handler_klass} < Cthulhu::Handler"
      file.puts "  # Methods created should match actions defined by you in the routes file."
      file.puts "  # ATTENTION: all methods must return ack!, ignore! or requeue!"
      file.puts "  # ack! means 'OK, REMOVE MESSAGE FROM QUEUE'"
      file.puts "  # ignore! and requeue! require no explanation."
      if ARGV[2]
        file.puts "  def #{ARGV[2]}"
        file.puts "    puts message"
        file.puts "    ack!"
        file.puts "  end"
      end
      file.puts "end"
    end
    puts "#{handler_file_path} created."
  else
    puts "You must run this command from the 'app' folder."
  end
end

def new_app(gem_path)
  app_name = ARGV[1]
  queue_uuid = SecureRandom.uuid
  Dir.mkdir "./#{app_name}" unless File.exists?(app_name)
  puts "Copying files FROM #{gem_path}/../template/. INTO #{Dir.pwd}/#{app_name} "
  FileUtils.cp_r "#{gem_path}/../template/.", "./#{app_name}/"
  files = `grep -rl '__APP_NAME__' #{app_name}`.inspect.gsub('\n', ':')
  array = files.split(':')
  array.pop
  array.each do |file_name|
    file_name = "#{Dir.pwd}/#{file_name}"
    file_name = file_name.gsub('"', '')
    text = File.read(file_name)
    new_contents = text.gsub(/__APP_NAME__/, app_name)
    # new_contents = new_contents.gsub(/__QUEUE_UUID__/, queue_uuid)
    # To write changes to the file, use:
    File.open(file_name, "w") {|file| file.puts new_contents }
  end

  base_path = "./#{app_name}"
  dir_names = ["bin", "logs", "tmp", "lib", "app", "app/handlers", "app/models", "spec", "config/initializers"]

  dir_names.each do |dir_name|
    path = base_path + "/#{dir_name}"
    Dir.mkdir(path) unless File.exists?(path)
    FileUtils.touch("#{path}/.keep")
  end

  File.open("./#{app_name}/.gitignore", "w") {|f| f.write(".DS_Store\napp/logs/*.log\napp/tmp/*.pid") }

  puts "Done. No life matter."
end

def start_app(gem_path)
  if File.readlines("Gemfile").grep(/rails/).size > 0
    require "#{Dir.pwd}/config/environment"
    ENV['CTHULHU_ENV'] = Rails.env
    Cthulhu::Application.name = Rails.application.class.parent_name
    Cthulhu::Application.queue_name = Cthulhu::Application.name
    Cthulhu::Application.start
  else
    exec('ruby config/application.rb')
  end
end
def start_console(gem_path)
  exec('CONSOLE=1 $(which bundle) exec irb -r ./config/application.rb')
end

if command && ARGV[1]
  case command
  when 'handler' then new_handler(gem_path)
  when 'new' then new_app(gem_path)
  else
    usage
  end
else
  case command
  when 'start', 's' then start_app(gem_path)
  when 'console', 'c' then start_console(gem_path)
  else
    usage
  end
end
